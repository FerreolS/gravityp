/***********************************************************
# "@(#) $Id$" 
#
# Error Include File    Created on  Jul 28 08:04:28 2015
# 
# This file has been generated by a utility
# 
#  !!!!!!!!!!!  DO NOT MANUALLY EDIT THIS FILE  !!!!!!!!!!!
# 
***********************************************************/
#ifndef ccsERRORS_H
#define ccsERRORS_H 

#ifndef CCS_H
#include "ccs.h"
#endif 

#define ccsErrOffset 0
 
#ifndef __cplusplus

#define ccsERR_RTAP                 ((vltINT16) ( ccsErrOffset + 1 ))
#define ccsERR_PARAMETER            ((vltINT16) ( ccsErrOffset + 2 ))
#define ccsERR_BUFF_SIZE            ((vltINT16) ( ccsErrOffset + 3 ))
#define ccsERR_ENV_VARIABLE         ((vltINT16) ( ccsErrOffset + 4 ))
#define ccsERR_DATA                 ((vltINT16) ( ccsErrOffset + 6 ))
#define ccsERR_NULL_PTR             ((vltINT16) ( ccsErrOffset + 7 ))
#define ccsERR_IN_USE               ((vltINT16) ( ccsErrOffset + 8 ))
#define ccsERR_PROC_NAME            ((vltINT16) ( ccsErrOffset + 9 ))
#define ccsERR_ENV_NAME             ((vltINT16) ( ccsErrOffset + 10 ))
#define ccsERR_PROC_INFO            ((vltINT16) ( ccsErrOffset + 11 ))
#define ccsERR_PARSE                ((vltINT16) ( ccsErrOffset + 12 ))
#define ccsERR_INIT                 ((vltINT16) ( ccsErrOffset + 13 ))
#define ccsERR_PID                  ((vltINT16) ( ccsErrOffset + 14 ))
#define ccsERR_OPEN_MSGQ            ((vltINT16) ( ccsErrOffset + 15 ))
#define ccsERR_NOT_IMPL             ((vltINT16) ( ccsErrOffset + 16 ))
#define ccsERR_NO_PROC              ((vltINT16) ( ccsErrOffset + 20 ))
#define ccsERR_MEMORY               ((vltINT16) ( ccsErrOffset + 21 ))
#define ccsERR_SET_ENV              ((vltINT16) ( ccsErrOffset + 22 ))
#define ccsERR_REMOTE_LINK          ((vltINT16) ( ccsErrOffset + 23 ))
#define ccsERR_ENV_NOT_ACTIVE       ((vltINT16) ( ccsErrOffset + 24 ))
#define ccsERR_NO_QUEUE_SERVER      ((vltINT16) ( ccsErrOffset + 25 ))
#define ccsERR_FILE                 ((vltINT16) ( ccsErrOffset + 30 ))
#define ccsERR_FILE_READ            ((vltINT16) ( ccsErrOffset + 31 ))
#define ccsERR_FILE_WRITE           ((vltINT16) ( ccsErrOffset + 32 ))
#define ccsERR_SHM                  ((vltINT16) ( ccsErrOffset + 40 ))
#define ccsERR_SHM_GETID            ((vltINT16) ( ccsErrOffset + 41 ))
#define ccsERR_SHM_ATTACH           ((vltINT16) ( ccsErrOffset + 42 ))
#define ccsERR_SHM_CREATE           ((vltINT16) ( ccsErrOffset + 43 ))
#define ccsERR_SEM_CREATE           ((vltINT16) ( ccsErrOffset + 45 ))
#define ccsERR_REQUEST_FAILED       ((vltINT16) ( ccsErrOffset + 46 ))
#define ccsERR_BOOKING              ((vltINT16) ( ccsErrOffset + 47 ))
#define ccsERR_GET_SEMAPHORE        ((vltINT16) ( ccsErrOffset + 48 ))
#define ccsERR_MAXPROC              ((vltINT16) ( ccsErrOffset + 49 ))
#define ccsERR_TO_STAT              ((vltINT16) ( ccsErrOffset + 50 ))
#define ccsERR_CONFIG               ((vltINT16) ( ccsErrOffset + 51 ))
#define ccsERR_MONITOR_SYSTEM       ((vltINT16) ( ccsErrOffset + 52 ))
#define ccsERR_MONITOR_INTERNAL     ((vltINT16) ( ccsErrOffset + 53 ))
#define ccsERR_MONITOR_COMMAND      ((vltINT16) ( ccsErrOffset + 54 ))
#define ccsERR_ALREADY_RUNNING      ((vltINT16) ( ccsErrOffset + 55 ))

#else

#define ccsERR_RTAP                 (static_cast<vltINT16> ( ccsErrOffset + 1 ))
#define ccsERR_PARAMETER            (static_cast<vltINT16> ( ccsErrOffset + 2 ))
#define ccsERR_BUFF_SIZE            (static_cast<vltINT16> ( ccsErrOffset + 3 ))
#define ccsERR_ENV_VARIABLE         (static_cast<vltINT16> ( ccsErrOffset + 4 ))
#define ccsERR_DATA                 (static_cast<vltINT16> ( ccsErrOffset + 6 ))
#define ccsERR_NULL_PTR             (static_cast<vltINT16> ( ccsErrOffset + 7 ))
#define ccsERR_IN_USE               (static_cast<vltINT16> ( ccsErrOffset + 8 ))
#define ccsERR_PROC_NAME            (static_cast<vltINT16> ( ccsErrOffset + 9 ))
#define ccsERR_ENV_NAME             (static_cast<vltINT16> ( ccsErrOffset + 10 ))
#define ccsERR_PROC_INFO            (static_cast<vltINT16> ( ccsErrOffset + 11 ))
#define ccsERR_PARSE                (static_cast<vltINT16> ( ccsErrOffset + 12 ))
#define ccsERR_INIT                 (static_cast<vltINT16> ( ccsErrOffset + 13 ))
#define ccsERR_PID                  (static_cast<vltINT16> ( ccsErrOffset + 14 ))
#define ccsERR_OPEN_MSGQ            (static_cast<vltINT16> ( ccsErrOffset + 15 ))
#define ccsERR_NOT_IMPL             (static_cast<vltINT16> ( ccsErrOffset + 16 ))
#define ccsERR_NO_PROC              (static_cast<vltINT16> ( ccsErrOffset + 20 ))
#define ccsERR_MEMORY               (static_cast<vltINT16> ( ccsErrOffset + 21 ))
#define ccsERR_SET_ENV              (static_cast<vltINT16> ( ccsErrOffset + 22 ))
#define ccsERR_REMOTE_LINK          (static_cast<vltINT16> ( ccsErrOffset + 23 ))
#define ccsERR_ENV_NOT_ACTIVE       (static_cast<vltINT16> ( ccsErrOffset + 24 ))
#define ccsERR_NO_QUEUE_SERVER      (static_cast<vltINT16> ( ccsErrOffset + 25 ))
#define ccsERR_FILE                 (static_cast<vltINT16> ( ccsErrOffset + 30 ))
#define ccsERR_FILE_READ            (static_cast<vltINT16> ( ccsErrOffset + 31 ))
#define ccsERR_FILE_WRITE           (static_cast<vltINT16> ( ccsErrOffset + 32 ))
#define ccsERR_SHM                  (static_cast<vltINT16> ( ccsErrOffset + 40 ))
#define ccsERR_SHM_GETID            (static_cast<vltINT16> ( ccsErrOffset + 41 ))
#define ccsERR_SHM_ATTACH           (static_cast<vltINT16> ( ccsErrOffset + 42 ))
#define ccsERR_SHM_CREATE           (static_cast<vltINT16> ( ccsErrOffset + 43 ))
#define ccsERR_SEM_CREATE           (static_cast<vltINT16> ( ccsErrOffset + 45 ))
#define ccsERR_REQUEST_FAILED       (static_cast<vltINT16> ( ccsErrOffset + 46 ))
#define ccsERR_BOOKING              (static_cast<vltINT16> ( ccsErrOffset + 47 ))
#define ccsERR_GET_SEMAPHORE        (static_cast<vltINT16> ( ccsErrOffset + 48 ))
#define ccsERR_MAXPROC              (static_cast<vltINT16> ( ccsErrOffset + 49 ))
#define ccsERR_TO_STAT              (static_cast<vltINT16> ( ccsErrOffset + 50 ))
#define ccsERR_CONFIG               (static_cast<vltINT16> ( ccsErrOffset + 51 ))
#define ccsERR_MONITOR_SYSTEM       (static_cast<vltINT16> ( ccsErrOffset + 52 ))
#define ccsERR_MONITOR_INTERNAL     (static_cast<vltINT16> ( ccsErrOffset + 53 ))
#define ccsERR_MONITOR_COMMAND      (static_cast<vltINT16> ( ccsErrOffset + 54 ))
#define ccsERR_ALREADY_RUNNING      (static_cast<vltINT16> ( ccsErrOffset + 55 ))

#endif

#endif


